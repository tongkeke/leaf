#定义输出级别
log4j.rootLogger=DEBUG,Console,File
#日志输出方式：控制台输出

log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
log4j.appender.Console.Encoding=UTF-8

#可以灵活地指定布局模式
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
#log4j.appender.Console.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss.SSS} -%p (%F\:%L)- %m%n
#打印格式栗子：2017-08-11 15:36 -DEBUG (HttpServletBean.java:174)- Servlet 'mvc' configured successfully
log4j.appender.Console.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm} -%p (%F\:%L)- %m%n

### 打印SQL ###
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
#log4j.logger.java.sql.ResultSet=DEBUG

#DailyRollingFileAppender每天产生一个日志文件  
log4j.appender.File=org.apache.log4j.DailyRollingFileAppender  
  
#设置日志文件保存路径  
log4j.appender.File.File=../log/backup.log
  
#日志输出格式  
log4j.appender.File.layout.ConversionPattern=%-d{yyyy-MM-dd HH\:mm\:ss} [%c]-[%p] %m%n  
   
#设置日志文件后缀名,决定着多长时间创建一个新的文件！yyyyMMdd每天一个，yyyyMMddHH第小时一个,...  
log4j.appender.File.DatePattern='.'yyyy-MM-dd  
  
#日志布局格式  
log4j.appender.File.layout=org.apache.log4j.PatternLayout
log4j.appender.File.Encoding=UTF-8
